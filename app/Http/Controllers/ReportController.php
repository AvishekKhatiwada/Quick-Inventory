<?php

namespace App\Http\Controllers;

use App\Models\Sale;
use PdfReport;
use ExcelReport;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class ReportController extends Controller
{
    public function index()
    {
        return View("dashboard.report");
    }

    public function todaysReport(Request $request, $type)
    {
        $todaysDate = date("Y/m/d");
        $title = 'Todays Report';
        $meta = [
            'Date ' => $todaysDate,
            "" => "",
            'Generated By' => "Quick Inventory"
        ];

        $queryBuilder = Sale::select(['pname', 'pid', DB::raw('sum(quantity) as sold'), DB::raw('sum(sellingprice) as spperproduct'), DB::raw('sum(costprice) as cpperproduct'), 'soldper'])
            ->join("products", "products.id", "=", "sales.pid")
            ->groupBY("pid")
            ->where('sales.salesdate', date("Ymd"));

        $columns = [
            'Product' => 'pname',
            'Quantity' =>  function ($result) {
                return $result->sold . " " . $result->soldper;
            },
            'Sp' => 'spperproduct',
            'Cp' => 'cpperproduct',
            'Profit/Loss' => function ($result) {
                return ($result->spperproduct - $result->cpperproduct);
            }
        ];
        if ($type == 'pdf') {
            return PdfReport::of($title, $meta, $queryBuilder, $columns)
                ->editColumn('Total Balance', [
                    'class' => 'right ',
                ])
                ->editColumns(['Quantity', 'Sp', 'Cp', 'Profit/Loss'], [
                    'class' => 'right '
                ])
                ->setCss([
                    '.bolder' => 'font-weight: 800;',
                    '.italic-red' => 'color: red;font-style: italic;',
                    '.fs-5' => 'font-size: large;'
                ])
                ->showTotal([
                    'Sp' => 'Rs.',
                    'Cp' => 'Rs.',
                    'Profit/Loss' => 'Rs.'
                ])
                ->stream();
        } else {
            return ExcelReport::of($title, $meta, $queryBuilder, $columns)
                ->editColumn('Total Balance', [
                    'class' => 'right ',
                ])
                ->editColumns(['Quantity', 'Sp', 'Cp', 'Profit/Loss'], [
                    'class' => 'right '
                ])
                ->setCss([
                    '.bolder' => 'font-weight: 800;',
                    '.italic-red' => 'color: red;font-style: italic;',
                    '.fs-5' => 'font-size: large;'
                ])
                ->showTotal([
                    'Sp' => 'Rs.',
                    'Cp' => 'Rs.',
                    'Profit/Loss' => 'Rs.'
                ])
                ->download("TodaysReport");
        }
    }

    public function weeklyReport(Request $request, $type)
    {
        $todaysDate = date("Y/m/d");
        $title = 'Weekly Report';
        $meta = [
            'Date ' => $todaysDate,
            "" => "",
            'Generated By' => "Quick Inventory"
        ];

        $queryBuilder = Sale::select(['pname', 'pid', DB::raw('sum(quantity) as sold'), DB::raw('sum(sellingprice) as spperproduct'), DB::raw('sum(costprice) as cpperproduct'), 'soldper', 'salesdate'])
            ->join("products", "products.id", "=", "sales.pid")
            ->groupBY("pid", "salesdate")
            ->orderBy('salesdate', 'DESC');

        $columns = [
            'Sales On' => 'salesdate',
            'Product' => 'pname',
            'Quantity' =>  function ($result) {
                return $result->sold . " " . $result->soldper;
            },
            'Sp' => 'spperproduct',
            'Cp' => 'cpperproduct',
            'Profit/Loss' => function ($result) {
                return ($result->spperproduct - $result->cpperproduct);
            }
        ];
        if ($type == 'pdf') {
            return PdfReport::of($title, $meta, $queryBuilder, $columns)
                ->editColumn('Sales On', [
                    'displayAs' => function ($result) {
                        return substr($result->salesdate, 0, 4) . '/' . substr($result->salesdate, 4, 2) . '/' . substr($result->salesdate, 6, 2);
                    }
                ])
                ->editColumn('Total Balance', [
                    'class' => 'right ',
                ])
                ->editColumns(['Quantity', 'Sp', 'Cp', 'Profit/Loss'], [
                    'class' => 'right '
                ])
                ->setCss([
                    '.bolder' => 'font-weight: 800;',
                    '.italic-red' => 'color: red;font-style: italic;',
                    '.fs-5' => 'font-size: large;'
                ])
                ->groupBy('Sales On')
                ->showTotal([
                    'Sp' => 'Rs.',
                    'Cp' => 'Rs.',
                    'Profit/Loss' => 'Rs.'
                ])
                ->stream();
        } else {
            return ExcelReport::of($title, $meta, $queryBuilder, $columns)
                ->editColumn('Sales On', [
                    'displayAs' => function ($result) {
                        return substr($result->salesdate, 0, 4) . '/' . substr($result->salesdate, 4, 2) . '/' . substr($result->salesdate, 6, 2);
                    }
                ])
                ->editColumn('Total Balance', [
                    'class' => 'right ',
                ])
                ->editColumns(['Quantity', 'Sp', 'Cp', 'Profit/Loss'], [
                    'class' => 'right '
                ])
                ->setCss([
                    '.bolder' => 'font-weight: 800;',
                    '.italic-red' => 'color: red;font-style: italic;',
                    '.fs-5' => 'font-size: large;'
                ])
                ->groupBy('Sales On')
                ->showTotal([
                    'Sp' => 'Rs.',
                    'Cp' => 'Rs.',
                    'Profit/Loss' => 'Rs.'
                ])
                ->download("Weekly Report");
        }
    }
    public function totalReport(Request $request, $type)
    {
        $todaysDate = date("Y/m/d");
        $title = 'Total Report';
        $meta = [
            'Date ' => $todaysDate,
            "" => "",
            'Generated By' => "Quick Inventory"
        ];

        $queryBuilder = Sale::select(['pname', 'pid', "quantity", 'sellingprice', 'costprice', 'soldper', 'salesdate'])
            ->join("products", "products.id", "=", "sales.pid")
            ->orderBy('salesdate', 'DESC');

        $columns = [
            'Sales On' => 'salesdate',
            'Product' => 'pname',
            'Quantity' =>  function ($result) {
                return $result->quantity . " " . $result->soldper;
            },
            'Sp' => 'sellingprice',
            'Cp' => 'costprice',
            'Profit/Loss' => function ($result) {
                return ($result->sellingprice - $result->costprice);
            }
        ];
        if ($type == 'pdf') {
            return PdfReport::of($title, $meta, $queryBuilder, $columns)
                ->editColumn('Sales On', [
                    'displayAs' => function ($result) {
                        return substr($result->salesdate, 0, 4) . '/' . substr($result->salesdate, 4, 2) . '/' . substr($result->salesdate, 6, 2);
                    }
                ])
                ->editColumn('Total Balance', [
                    'class' => 'right ',
                ])
                ->editColumns(['Quantity', 'Sp', 'Cp', 'Profit/Loss'], [
                    'class' => 'right '
                ])
                ->setCss([
                    '.bolder' => 'font-weight: 800;',
                    '.italic-red' => 'color: red;font-style: italic;',
                    '.fs-5' => 'font-size: large;'
                ])
                ->groupBy('Sales On')
                ->showTotal([
                    'Sp' => 'Rs.',
                    'Cp' => 'Rs.',
                    'Profit/Loss' => 'Rs.'
                ])
                ->stream();
        } else {
            return ExcelReport::of($title, $meta, $queryBuilder, $columns)
                ->editColumn('Sales On', [
                    'displayAs' => function ($result) {
                        return substr($result->salesdate, 0, 4) . '/' . substr($result->salesdate, 4, 2) . '/' . substr($result->salesdate, 6, 2);
                    }
                ])
                ->editColumn('Total Balance', [
                    'class' => 'right ',
                ])
                ->editColumns(['Quantity', 'Sp', 'Cp', 'Profit/Loss'], [
                    'class' => 'right '
                ])
                ->setCss([
                    '.bolder' => 'font-weight: 800;',
                    '.italic-red' => 'color: red;font-style: italic;',
                    '.fs-5' => 'font-size: large;'
                ])
                ->groupBy('Sales On')
                ->showTotal([
                    'Sp' => 'Rs.',
                    'Cp' => 'Rs.',
                    'Profit/Loss' => 'Rs.'
                ])
                ->download("Total Report");
        }
    }
}
